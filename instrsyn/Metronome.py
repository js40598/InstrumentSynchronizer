import numpy as np


class Metronome:
    def __init__(self, frequency, duration, bpm):
        self.frequency = frequency
        self.duration = duration
        self.bpm = bpm
        self.samples = self.generate_metronome_samples()

    def generate_metronome_samples(self):
        TICK_VALUES = [[-2089, -3162], [1878, -776], [3714, 2630], [2697, 5190], [5717, 7361], [12038, 11133], [14133, 15698], [13616, 17939], [11774, 14828], [2686, 5170], [-8485, -7474], [-12434, -16813], [-15595, -20798], [-20691, -21117], [-16447, -17695], [-5530, -11014], [-1915, -5642], [-4127, -5109], [-5399, -7254], [-6130, -7023], [-2031, -1119], [8730, 8859], [15751, 17361], [15491, 20939], [14966, 20336], [13361, 16455], [7660, 10681], [3802, 6887], [4215, 6086], [3240, 4040], [-906, -1384], [-5484, -7614], [-9487, -12594], [-12193, -15275], [-11984, -14184], [-9101, -10783], [-5998, -8605], [-4114, -7560], [-2199, -5394], [-116, -2621], [24, -435], [-110, 2139], [3568, 5637], [8914, 8993], [10777, 11437], [9270, 12194], [6652, 10324], [3820, 7071], [2390, 5075], [2157, 4286], [247, 2357], [-2954, -1221], [-4584, -4924], [-5254, -7901], [-6787, -9820], [-8004, -10050], [-7257, -8995], [-4921, -7632], [-2309, -5549], [-483, -2479], [581, 50], [1792, 1580], [3403, 3734], [5004, 6496], [6396, 8005], [7038, 8107], [6231, 7720], [4475, 6510], [2752, 4321], [1054, 1999], [-889, -334], [-2863, -2954], [-4553, -5245], [-5452, -6634], [-5471, -7260], [-5567, -7487], [-5696, -7702], [-4523, -7505], [-2703, -5764], [-1804, -2895], [-842, -605], [1028, 1215], [2587, 3671], [3944, 5985], [5514, 7094], [5726, 7751], [4879, 8470], [4751, 8287], [3971, 6500], [1706, 3495], [318, 251], [-365, -2229], [-2146, -3778], [-3382, -4791], [-3180, -5253], [-3548, -5471], [-4180, -6303], [-3657, -7389], [-2938, -7306], [-2343, -5710], [-1196, -3200], [-184, -152], [688, 2937], [2123, 5451], [3140, 7029], [3258, 7177], [3506, 5921], [3735, 4446], [3204, 3481], [2039, 2752], [420, 2435], [-1012, 2336], [-1608, 853], [-2047, -2359], [-2403, -5293], [-1770, -6590], [-896, -6356], [-835, -4605], [-1128, -2119], [-1774, -675], [-2555, -489], [-1792, -333], [257, -38], [1387, 217], [1843, 1324], [3105, 3400], [4073, 4812], [2811, 4399], [-62, 2577], [-1817, 291], [-1046, -1478], [337, -1946], [302, -1382], [-171, -866], [-35, -905], [-349, -1236], [-1470, -1766], [-2338, -2482], [-2341, -2718], [-1363, -1801], [-75, -184], [277, 1156], [299, 1875], [1486, 2033], [2824, 1708], [2646, 1341], [1647, 1309], [823, 1269], [-10, 941], [-523, 734], [-136, 810], [612, 698], [875, 225], [423, -294], [-521, -688], [-1279, -993], [-1186, -1202], [-437, -1262], [310, -1073], [774, -628], [843, -184], [382, 77], [-198, 297], [-137, 572], [565, 764], [1176, 766], [1352, 665], [1178, 692]]
        tab = [[0, 0]] * self.frequency * self.duration
        bps = 60 / self.bpm * self.frequency
        bps = int(bps)
        for i in range(1, len(tab), bps):
            for j in range(0, len(TICK_VALUES)):
                tab[i+j] = [TICK_VALUES[j % len(TICK_VALUES)][0] * 100_000,
                            TICK_VALUES[j % len(TICK_VALUES)][1] * 100_000]
        return np.array(tab).reshape(-1, 2)


